### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Budget {
  categories: [CategoryBudget]
  id: Int
  name: String
  savings: [SavingBudget]
}

type Category {
  id: Int
  name: String
}

type CategoryBudget {
  amount: Int
  id: Int
  name: String
}

type CategoryEntry {
  amount: Int
  expenses: [Expense]
  id: Int
  name: String
}

type Entry {
  categories: [CategoryEntry]
  id: Int
}

type Expense {
  description: String
  id: Int
  updatedAt: String
  value: Int
}

type Income {
  id: Int
  value: Int
}

type Mutation {
  createBudget(name: String!): Budget!
  createCategory(name: String!): Category!
  createCategoryBudget(amount: Int!, budgetId: Int!, categoryId: Int!): CategoryBudget!
  createCategoryEntry(amount: Int!, categoryId: Int!, entryId: Int!): CategoryEntry!
  createEntry(budgetId: Int!, month: Int!, year: Int!): Entry!
  createExpense(categoryId: Int!, description: String!, entryId: Int!, value: Int!): Expense!
  createIncome(description: String!, entryId: Int!, value: Int!): Income!
  createSaving(goal: Int!, name: String!, type: String, value: Int): Saving!
  createSavingBudget(budgetId: Int!, fee: Int!, savingId: Int!): SavingBudget!
  deleteCategoryBudget(budgetId: Int!, categoryId: Int!): CategoryBudget!
  deleteSaving(id: Int!): Saving!
  deleteSavingBudget(budgetId: Int!, savingId: Int!): SavingBudget!
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, password: String!): AuthPayload!
  updateBudget(id: Int!, name: String!): Budget!
  updateCategory(id: Int!, name: String!): Category!
  updateCategoryBudget(amount: Int!, budgetId: Int!, categoryId: Int!): CategoryBudget!
  updateSaving(goal: Int!, id: Int!, name: String!, value: Int!): Saving!
  updateSavingBudget(budgetId: Int!, fee: Int!, savingId: Int!): SavingBudget!
}

type Query {
  budget(id: Int!): Budget!
  budgets: [Budget!]
  categories: [Category!]
  entry(month: Int!, year: Int!): Entry!
  savings: [Saving!]
}

type Saving {
  fee: Int
  goal: Int
  id: Int
  name: String
  type: String
  value: Int
}

type SavingBudget {
  fee: Int
  id: Int
  name: String
}

type User {
  currencyCode: String
  email: String
  id: Int
  password: String
}
